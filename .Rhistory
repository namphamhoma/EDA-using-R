knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
summary(data)
summary(data$price)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
knit_with_parameters("C:/Users/arsen/OneDrive/Desktop/Data project/Data_analysis_project.Rmd")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
# Convert "last_review' column from character to datetime format
class(data$last_review)
library(tidyverse)
library(lubridate)
# Convert "last_review' column from character to datetime format
class(data$last_review)
data$date <- ymd(data$date)
library(tidyverse)
library(lubridate)
# Convert "last_review' column from character to datetime format
class(data$last_review)
data.date <- ymd(data.date)
# Convert "last_review' column from character to datetime format
class(data$last_review)
data$last_review <- ymd(data$last_review)
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
data$last_review
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
class(data$last_review)
# Conver "reviews_per_month" column from numeric to integer format
data$reviews_per_month <- as.integer(data$reviews_per_month)
# Conver "reviews_per_month" column from numeric to integer format
data$reviews_per_month <- as.integer(data$reviews_per_month)
class(data$reviews_per_month)
summary(data)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
class(data$last_review)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
#Check for missing values
data <- na.omit(data)
sum(is.na(data))
# Check for duplicates
sum(duplicated(data))
unlink("EDA using R_cache", recursive = TRUE)
knit_with_parameters("C:/Users/arsen/OneDrive/Desktop/Data project/EDA using R.Rmd")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
knitr::purl()
library(knitr)
library(knitr)
purl("EDA using R.Rmd")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(knitr)
purl("EDA using R.Rmd", output = "test2.R", documentation = 2)
#'
#' I) PROJECT DESCRIPTION
#'
#' This is a report that we will analyze a dataset of Airbnb listings in New York City to gain insights into the rental market in the city. We will explore the data using R and perform data cleaning and preprocessing steps. We will then conduct exploratory data analysis (EDA) to uncover trends and patterns in the data. Finally, we will draw some graphs to visualize our findings and communicate to others.
#'
#' II) LOADING PACKAGES AND DATA
#'
## ------------------------------------------------------------------------------------------------------------------------
library(tidyverse)
library(lubridate)
#'
## ------------------------------------------------------------------------------------------------------------------------
# Import data
data <- read.csv(file.choose())
head(data)
head(data)
#'
## ------------------------------------------------------------------------------------------------------------------------
#Display the structure of data
str(data)
## ------------------------------------------------------------------------------------------------------------------------
dim(data)
#' III) DATA CLEANING
#'
## ------------------------------------------------------------------------------------------------------------------------
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
#'
## ------------------------------------------------------------------------------------------------------------------------
# Check for duplicates
sum(duplicated(data))
## ------------------------------------------------------------------------------------------------------------------------
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
class(data$last_review)
#'
#' IV) EXPLORE THE DATA
#'
#' Descriptive Statistics
## ------------------------------------------------------------------------------------------------------------------------
summary(data)
#'
#'
#' Here are some questions we could explore using this dataset:
#'
#' 1.What are the most popular neighborhoods in New York City for Airbnb rentals?
#'
## ------------------------------------------------------------------------------------------------------------------------
ggplot(data,aes(neighbourhood_group))+
geom_bar()
#'
#'
## ------------------------------------------------------------------------------------------------------------------------
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
#'
#' 2.What types of properties are most commonly listed on Airbnb in New York City?
#'
## ------------------------------------------------------------------------------------------------------------------------
data %>%
count(room_type) %>%
arrange(desc(n))
#'
#' 3.How do prices vary by neighborhood and property type?
#'
## ------------------------------------------------------------------------------------------------------------------------
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
#'
#' 4.Compare the number of Airbnb rental listings across different neighborhoods and room types
## ------------------------------------------------------------------------------------------------------------------------
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
## ------------------------------------------------------------------------------------------------------------------------
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
## ------------------------------------------------------------------------------------------------------------------------
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
#'
## ------------------------------------------------------------------------------------------------------------------------
library(knitr)
purl("EDA using R.Rmd")
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
#'
install.packages("rmarkdown")
library(rmarkdown)
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
render("EDA using R.Rmd", "pdf_document")
install.packages("rmarkdown")
library(rmarkdown)
render("EDA using R.Rmd", "pdf_document")
unlink("EDA using R_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
class(data$last_review)
summary(data)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
# Convert "last_review' column from character to datetime format
data$last_review <- ymd(data$last_review)
class(data$last_review)
summary(data)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
# Convert "last_review' column from character to datetime format
data.last_review <- ymd(data.last_review)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
summary(data)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
# Import data
data <- read.csv(file.choose())
head(data)
#Display the structure of data
str(data)
dim(data)
#Check for missing values
sum(is.na(data))
data <- na.omit(data)
# Check for duplicates
sum(duplicated(data))
summary(data)
ggplot(data,aes(neighbourhood_group))+
geom_bar()
data %>%
count(neighbourhood) %>%
arrange(desc(n)) %>%
head(10)
data %>%
count(room_type) %>%
arrange(desc(n))
data %>%
group_by(neighbourhood, room_type) %>%
summarize(avg_price = mean(price)) %>%
arrange(desc(avg_price))
data %>%
group_by(neighbourhood_group, room_type) %>%
summarise(n = n()) %>%
ggplot(aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(stat = "identity") +
labs(x = "Neighborhood_group", y = "Number of Listings", title = "Number of Airbnb Rental Listings by Neighborhood and Room Type") +
theme_bw()
# Select only numerical variables
numerical_vars <- data %>%
select_if(is.numeric)
# Compute correlation matrix
cor_matrix <- cor(numerical_vars)
# Print correlation matrix
print(cor_matrix)
# Load ggcorrplot package
library(ggcorrplot)
# Create correlation plot
ggcorrplot(cor_matrix, type = "lower")
